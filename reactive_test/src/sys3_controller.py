import sqlite3 


class NoEnvController(object):
    """Mealy transducer.

    Internal states are integers, the current state
    is stored in the attribute "state".
    To take a transition, call method "move".

    The names of input variables are stored in the
    attribute "input_vars".

    Automatically generated by tulip.dumpsmach on 2017-08-17 08:03:11 UTC
    To learn more about TuLiP, visit http://tulip-control.org
    """
    def __init__(self):
        self.state = 32
        self.input_vars = ['']
        self.database = sqlite3.connect("NoEnvController_db.db")
        self.database.row_factory = sqlite3.Row
        self.cursor = self.database.cursor()

    def move(self, ):
        """Given inputs, take move and return outputs.

        @rtype: dict
        @return: dictionary with keys of the output variable names:
            ['loc2', 'loc3', 'loc1', 'stage']
        """
        output = dict()
        req_arg = dict()
        req_arg["current_state"] = self.state

        self.cursor.execute("select next_state,loc2,loc3,loc1,stage from state_trans where current_state=:current_state ",req_arg)
        res = self.cursor.fetchone()
        if res is not None:
            (self.state,output["loc2"],output["loc3"],output["loc1"],output["stage"])=(res["next_state"],res["loc2"],res["loc3"],res["loc1"],res["stage"])
        else:
            self.cursor.execute("select is_dead_end_state from state_trans where current_state="+str(self.state))
            res_else = self.cursor.fetchone()
            if res_else is not None and res_else["is_dead_end_state"] == 1:
                raise Exception("Reached dead-end state !")
            elif res_else is not None:
                self._error()
            else:
                raise Exception("Unrecognized state : state = "+str(self.state))
        return output

    def _error(self, ):
        raise ValueError("Unrecognized input: " + ().format())
